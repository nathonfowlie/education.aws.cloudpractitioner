{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AWS Cloud Practitioner \u00b6 Study notes for aws cloud practitioner exam What is Cloud Computing? \u00b6 On-demand delivery of compute, storage, applications and other IT resources. Problems with traditional IT approach \u00b6 Have to rent space in the data centre. Have to pay for power supply, cooling, maintenance. Time required to add/replace hardware. Limited scalability. Needs 24x7 team to monitor infrastructure. Have to manage DR events. Benefits of Cloud Computing \u00b6 Pay as you go pricing. Rapidly provision the right type & size of compute resources as required. Simple way to access servers, storage, databases and application services. Network connected hardware managed by AWS Deployment Models \u00b6 Private Cloud \u00b6 Used by single organisation. Not exposed to the public. Provides security for sensitive applications. Meets specific business needs. Public Cloud \u00b6 Resources owned/managed by third-party cloud service provider. Hybrid Cloud \u00b6 Mix of private and public cloud. Control sensitive parts of your infrastructure, but leverage flexibility/cost effectiveness of public cloud. Characterics of Cloud Computing \u00b6 Characteristic Description On-demand service Users provision/use resources without human interaction from the service provider. Broad network access Resources available over the network, accessible from diverse client platforms. Multi-tenancy & resource pooling Multiple customers share the same infra & applications (with security/privacy). Rapid elasticity and scalability Automatically/quickly scale up & down as needed. Measured service Usage is measured, only pay for what you use. Advantages of Cloud Computing \u00b6 Advantage Description Trade CAPEX for OPEX Pay as you go, reduces TCO and OPEX. Economy of scale Reduced prices due to large scale of AWS. Stop guessing capacity Scale based on measured usage. Speed & agility Rapidly scale up/down, re-design infrastructure as needed. Global reach Leverage AWS global infrastructure. Problems solved by Cloud Computing \u00b6 Flexibility - Change resource types as they're needed. Cost Effectiveness - Pay as you go based on actual usage. Scalability - Easily scale horizontally or vertically. Elasticity - Rapidly scale up/down based on demand. High availability/Fault tolerance - Build cross multiple data centres. Agility - Rapidly develop, test and deploy applications. Types of Cloud Computing \u00b6 Type Description Infrastructure as a Service (IaaS) Networking, computers, storage. Highest level of flexibility and can run side-by-side with on-prem infra. Platform as a Service (PaaS) Organisation doesn't have to manage the infrastructure. Focuses on deployment/management of applications. Software as a Service (SaaS) Complete product managed by the service provider. AWS Pricing Model \u00b6 Pay for compute. Pay for storage. Pay for data transfer out of the cloud (data transfer in is free). AWS Global Infrastructure \u00b6 Region - Cluster of data centres. Chose a region based on compliance requirements, proximity to customers, available services in that region, and pricing. Availability Zone - One or more data centres with their own power, networking etc. Each region as a minimum of 2, max of 6, typically there's 3. Data Centre - Self explanatory.. Edge Location/Point of Presence - 205 edge locations, and 11 regional caches in 84 cities and 42 countries. Content delivered with lower latency. Shared Responsibility Model \u00b6 Customer \u00b6 Customers are resposible for security in the cloud - Customer data. Platform. Applications. IDAM. Encryption. Network traffic security. AWS \u00b6 Responsible for security of the cloud - Infrastructure, hardware, software and internal security.","title":"Overview"},{"location":"#aws-cloud-practitioner","text":"Study notes for aws cloud practitioner exam","title":"AWS Cloud Practitioner"},{"location":"#what-is-cloud-computing","text":"On-demand delivery of compute, storage, applications and other IT resources.","title":"What is Cloud Computing?"},{"location":"#problems-with-traditional-it-approach","text":"Have to rent space in the data centre. Have to pay for power supply, cooling, maintenance. Time required to add/replace hardware. Limited scalability. Needs 24x7 team to monitor infrastructure. Have to manage DR events.","title":"Problems with traditional IT approach"},{"location":"#benefits-of-cloud-computing","text":"Pay as you go pricing. Rapidly provision the right type & size of compute resources as required. Simple way to access servers, storage, databases and application services. Network connected hardware managed by AWS","title":"Benefits of Cloud Computing"},{"location":"#deployment-models","text":"","title":"Deployment Models"},{"location":"#characterics-of-cloud-computing","text":"Characteristic Description On-demand service Users provision/use resources without human interaction from the service provider. Broad network access Resources available over the network, accessible from diverse client platforms. Multi-tenancy & resource pooling Multiple customers share the same infra & applications (with security/privacy). Rapid elasticity and scalability Automatically/quickly scale up & down as needed. Measured service Usage is measured, only pay for what you use.","title":"Characterics of Cloud Computing"},{"location":"#advantages-of-cloud-computing","text":"Advantage Description Trade CAPEX for OPEX Pay as you go, reduces TCO and OPEX. Economy of scale Reduced prices due to large scale of AWS. Stop guessing capacity Scale based on measured usage. Speed & agility Rapidly scale up/down, re-design infrastructure as needed. Global reach Leverage AWS global infrastructure.","title":"Advantages of Cloud Computing"},{"location":"#problems-solved-by-cloud-computing","text":"Flexibility - Change resource types as they're needed. Cost Effectiveness - Pay as you go based on actual usage. Scalability - Easily scale horizontally or vertically. Elasticity - Rapidly scale up/down based on demand. High availability/Fault tolerance - Build cross multiple data centres. Agility - Rapidly develop, test and deploy applications.","title":"Problems solved by Cloud Computing"},{"location":"#types-of-cloud-computing","text":"Type Description Infrastructure as a Service (IaaS) Networking, computers, storage. Highest level of flexibility and can run side-by-side with on-prem infra. Platform as a Service (PaaS) Organisation doesn't have to manage the infrastructure. Focuses on deployment/management of applications. Software as a Service (SaaS) Complete product managed by the service provider.","title":"Types of Cloud Computing"},{"location":"#aws-pricing-model","text":"Pay for compute. Pay for storage. Pay for data transfer out of the cloud (data transfer in is free).","title":"AWS Pricing Model"},{"location":"#aws-global-infrastructure","text":"Region - Cluster of data centres. Chose a region based on compliance requirements, proximity to customers, available services in that region, and pricing. Availability Zone - One or more data centres with their own power, networking etc. Each region as a minimum of 2, max of 6, typically there's 3. Data Centre - Self explanatory.. Edge Location/Point of Presence - 205 edge locations, and 11 regional caches in 84 cities and 42 countries. Content delivered with lower latency.","title":"AWS Global Infrastructure"},{"location":"#shared-responsibility-model","text":"","title":"Shared Responsibility Model"},{"location":"#customer","text":"Customers are resposible for security in the cloud - Customer data. Platform. Applications. IDAM. Encryption. Network traffic security.","title":"Customer"},{"location":"#aws","text":"Responsible for security of the cloud - Infrastructure, hardware, software and internal security.","title":"AWS"},{"location":"ebs/","text":"Elastic Block Store (EBS) \u00b6 Overview \u00b6 Network drive that can be attached to running instances. Persist data even after EC2 instances are terminated (re-attach volume to new instance). Can only be attached to one instance at a time. Bound to a specific availability zone. To move to another AZ, you need to create a snapshot. 30GB of General Purpose (SSD) of Magnetic storage per month is available on the free tier. Capacity (size and IOPS) is provisioned in advance.","title":"EBS"},{"location":"ebs/#elastic-block-store-ebs","text":"","title":"Elastic Block Store (EBS)"},{"location":"ebs/#overview","text":"Network drive that can be attached to running instances. Persist data even after EC2 instances are terminated (re-attach volume to new instance). Can only be attached to one instance at a time. Bound to a specific availability zone. To move to another AZ, you need to create a snapshot. 30GB of General Purpose (SSD) of Magnetic storage per month is available on the free tier. Capacity (size and IOPS) is provisioned in advance.","title":"Overview"},{"location":"ec2/","text":"EC2 \u00b6 Overview \u00b6 Need to activate IAM access to allow IAM users/federated users to access billing information. EC2 covers virtual machines, data storage on virtual drives (EBS), load balancing (ELB) and auto-scaling (ASG). Use an EC2 instance role to give an instance permissions to interact with other AWS services. Don't run aws configure on the instance because it might be shared with other users. Budgets \u00b6 Can create a budget under Cost Management. Can be a reoccuring, or expiring budget. Budget amount can be fixed (same limit each month), or based on a monthly budgeted amount (varying limits based on the monnth). Can aggregate costs by pre-defined categories, and include related costs such as tax, support charges etc. Alerts can be based on a percentage of actual, or forecasted costs. Budget can have multiple alerts. Alerts go to an e-mail address, or Slack/Chime via the AWS Chat bot. Sizing & Configuration Options \u00b6 Sizing/configuration can be based on - OS - Windows or Linux. CPU - Computer power, and number of cores. Memory - How much RAM is required. Storage - Network attached (EBS and EFS), or hardware (EC2 instance store). Network - Speed, public IP address. Firewall rules - Defined using security groups. Bootstrap script - EC2 user data that's executed at first launch of the EC2 instance. Instance Types \u00b6 Type Good For General Purpose Web servers, code repositories. Balance between compute, memory, networking. Compute Optimized Batch processing, media transcoding, high performance web server/computing, Scientific modelling & machine learning, gaming servers. Memory Optimized Processing large in-memory data sets. Floating point number calculations, Graphic processing, Data pattern matching. Storage Optimized Storage intensive tasks that need high UI. High frequency online transaction processing, relational/NoSQL databases, cache for in-memory databases (Redis), Data warehousing, Distributed file systems. Security Groups \u00b6 Firewall rules that can control traffic in/out of EC2 (IPv4 or IPv6). Only contain allow rules. Can reference by IP, or security group. Defines type (HTTP, SSH, custom), protocol (TCP, UDP), port range, source (anywhere, single IP, or CIDR) and rule description. A connect timeout on EC2 probably means a problem with the security group rules. SSH \u00b6 Make sure private key permissions are 0600 (or make yourself owner of the private key on Windows 10, and remove any other groups/users). EC2 Instance Connect \u00b6 Web based SSH terminal accessible through the management console. SSH Troubleshooting \u00b6 Connection timeout likely means an issue with the security groups, or corporate firewall/proxy. Connection refused means SSH isn't running on the instance. Throw it away and provision a new one. Permission denied means the ssh key permissions are wrong, the key is wrong, or you're using the wrong user. Use EC2 instance connect as a last resort if needed. EC2 Instance Purchasing Options \u00b6 EC2 On Demand \u00b6 Pay for what you use (per second for linux, per hour for windows). Suitable for short-term, uninterupted workloads, predictable pricing. Highest cost. No upfront payment. No long term committment. Reserved \u00b6 Slightly cheaper than On Demand. Suitable for steady state, long running workloads (databases etc). Reservation period of 1 or 3 years (must be one or the other. Can't be 2 years). Can pay upfront, partially upfront, or no upfront payment. The more you pay in advance, the more you save. Reserve a specific instance type (t2.micro etc). Convertible reserved instance is good for long workloads with flexible instances (can change the type). Scheduled reserved instances are good for specific time windows over 1-3 years (eg: Thursdays from 3pm - 6pm). Spot \u00b6 Highest discount. Suitable for workloads that are resilient to failure (batch jobs, image processing, distributed workloads etc).. Can be lost at any time, if the max price you're willing to pay is less than the spot price. Dedicated Hosts \u00b6 Book an entire physical server, control instance placement. Suitable where there's special compliance requirements, or where you need to use existing server-bound software licenses. More access to the underlying hardware (sockets, cores, host id). Allocated for 3 years. Expensive. Dedicated Instances \u00b6 Instance running on hardwre dedicated to you. May share hardware with other instances in the same account. No control over instance placement, but you can move hardware after a Stop/Start). Per instance billing. Shared Responsibility Model \u00b6 AWS are responsible for - Infrastructure (global network security). Isolation on physical hosts. Replacing faulty hardware. Compliance validation. Customers are responsible for - Security Group rules. OS patches and updates. Above base software/utilities installed on the instance. IAM roles assigned to the instance. IAM user access management. Data security on the instance.","title":"EC2"},{"location":"ec2/#ec2","text":"","title":"EC2"},{"location":"ec2/#overview","text":"Need to activate IAM access to allow IAM users/federated users to access billing information. EC2 covers virtual machines, data storage on virtual drives (EBS), load balancing (ELB) and auto-scaling (ASG). Use an EC2 instance role to give an instance permissions to interact with other AWS services. Don't run aws configure on the instance because it might be shared with other users.","title":"Overview"},{"location":"ec2/#budgets","text":"Can create a budget under Cost Management. Can be a reoccuring, or expiring budget. Budget amount can be fixed (same limit each month), or based on a monthly budgeted amount (varying limits based on the monnth). Can aggregate costs by pre-defined categories, and include related costs such as tax, support charges etc. Alerts can be based on a percentage of actual, or forecasted costs. Budget can have multiple alerts. Alerts go to an e-mail address, or Slack/Chime via the AWS Chat bot.","title":"Budgets"},{"location":"ec2/#sizing-configuration-options","text":"Sizing/configuration can be based on - OS - Windows or Linux. CPU - Computer power, and number of cores. Memory - How much RAM is required. Storage - Network attached (EBS and EFS), or hardware (EC2 instance store). Network - Speed, public IP address. Firewall rules - Defined using security groups. Bootstrap script - EC2 user data that's executed at first launch of the EC2 instance.","title":"Sizing &amp; Configuration Options"},{"location":"ec2/#instance-types","text":"Type Good For General Purpose Web servers, code repositories. Balance between compute, memory, networking. Compute Optimized Batch processing, media transcoding, high performance web server/computing, Scientific modelling & machine learning, gaming servers. Memory Optimized Processing large in-memory data sets. Floating point number calculations, Graphic processing, Data pattern matching. Storage Optimized Storage intensive tasks that need high UI. High frequency online transaction processing, relational/NoSQL databases, cache for in-memory databases (Redis), Data warehousing, Distributed file systems.","title":"Instance Types"},{"location":"ec2/#security-groups","text":"Firewall rules that can control traffic in/out of EC2 (IPv4 or IPv6). Only contain allow rules. Can reference by IP, or security group. Defines type (HTTP, SSH, custom), protocol (TCP, UDP), port range, source (anywhere, single IP, or CIDR) and rule description. A connect timeout on EC2 probably means a problem with the security group rules.","title":"Security Groups"},{"location":"ec2/#ssh","text":"Make sure private key permissions are 0600 (or make yourself owner of the private key on Windows 10, and remove any other groups/users).","title":"SSH"},{"location":"ec2/#ec2-instance-connect","text":"Web based SSH terminal accessible through the management console.","title":"EC2 Instance Connect"},{"location":"ec2/#ssh-troubleshooting","text":"Connection timeout likely means an issue with the security groups, or corporate firewall/proxy. Connection refused means SSH isn't running on the instance. Throw it away and provision a new one. Permission denied means the ssh key permissions are wrong, the key is wrong, or you're using the wrong user. Use EC2 instance connect as a last resort if needed.","title":"SSH Troubleshooting"},{"location":"ec2/#ec2-instance-purchasing-options","text":"","title":"EC2 Instance Purchasing Options"},{"location":"ec2/#ec2-on-demand","text":"Pay for what you use (per second for linux, per hour for windows). Suitable for short-term, uninterupted workloads, predictable pricing. Highest cost. No upfront payment. No long term committment.","title":"EC2 On Demand"},{"location":"ec2/#reserved","text":"Slightly cheaper than On Demand. Suitable for steady state, long running workloads (databases etc). Reservation period of 1 or 3 years (must be one or the other. Can't be 2 years). Can pay upfront, partially upfront, or no upfront payment. The more you pay in advance, the more you save. Reserve a specific instance type (t2.micro etc). Convertible reserved instance is good for long workloads with flexible instances (can change the type). Scheduled reserved instances are good for specific time windows over 1-3 years (eg: Thursdays from 3pm - 6pm).","title":"Reserved"},{"location":"ec2/#spot","text":"Highest discount. Suitable for workloads that are resilient to failure (batch jobs, image processing, distributed workloads etc).. Can be lost at any time, if the max price you're willing to pay is less than the spot price.","title":"Spot"},{"location":"ec2/#dedicated-hosts","text":"Book an entire physical server, control instance placement. Suitable where there's special compliance requirements, or where you need to use existing server-bound software licenses. More access to the underlying hardware (sockets, cores, host id). Allocated for 3 years. Expensive.","title":"Dedicated Hosts"},{"location":"ec2/#dedicated-instances","text":"Instance running on hardwre dedicated to you. May share hardware with other instances in the same account. No control over instance placement, but you can move hardware after a Stop/Start). Per instance billing.","title":"Dedicated Instances"},{"location":"ec2/#shared-responsibility-model","text":"AWS are responsible for - Infrastructure (global network security). Isolation on physical hosts. Replacing faulty hardware. Compliance validation. Customers are responsible for - Security Group rules. OS patches and updates. Above base software/utilities installed on the instance. IAM roles assigned to the instance. IAM user access management. Data security on the instance.","title":"Shared Responsibility Model"},{"location":"iam/","text":"Identity & Access Management (IAM) \u00b6 Overview \u00b6 Users can be limited to programmatic access only, and/or the management console. Can copy permissions from an existing user, or attach existing policies. Users can be tagged. There's 3 ways to access AWS - management console (password + MFA), cli (access key), and sdk (access key). Users are mapped to a physical user (duh....) Groups can't be nested. Policy is a JSON document outlining permissions for users or groups. Roles permit AWS resources/services to access other resources/services. Best Practise \u00b6 Delete root access keys. Activate MFA. Create individual IAM users. Use groups to assign permissions. Set an IAM password policy. Follow the least privilege principle. Multi-factor Authentication (MFA) \u00b6 Should be enabled for all users. Supported MFA Devices \u00b6 Virtual MFA (Google Authenticator, Authy) U2F Security Key (Yubikey) Hardware Key Fob (Gemalto) Hardware Key Fob for GovCloud (SurePassID) AWS CloudShell \u00b6 Cloud based CLI that can be used in lieu of the AWS CLI on your local machine. Uses the same credentials as the logged in user. IAM Roles \u00b6 Common roles are EC2 instance roles, Lambda function roles, and CloudFormation roles. IAM Security Tools \u00b6 IAM Credentials Report (account level) - List all users in an account and their various credentials.. IAM Access Adviser (user level) - Service permissions granted to a user and when the services were last accessed. Shared Responsibility Model \u00b6 There's a shared responsibility model for identity management on AWS - AWS is responsible for - Infrastructure (global network security). Configuration & vulnerability analysis. Compliance validation. Customers are responsible for - Users, Groups, Roles, Policies management & monitoring. Enabling MFA on all accounts. Rotating keys. Using IAM tools to apply appropriate permissions. Analyze access patterns and review permissions.","title":"Identity & Access Management"},{"location":"iam/#identity-access-management-iam","text":"","title":"Identity &amp; Access Management (IAM)"},{"location":"iam/#overview","text":"Users can be limited to programmatic access only, and/or the management console. Can copy permissions from an existing user, or attach existing policies. Users can be tagged. There's 3 ways to access AWS - management console (password + MFA), cli (access key), and sdk (access key). Users are mapped to a physical user (duh....) Groups can't be nested. Policy is a JSON document outlining permissions for users or groups. Roles permit AWS resources/services to access other resources/services.","title":"Overview"},{"location":"iam/#best-practise","text":"Delete root access keys. Activate MFA. Create individual IAM users. Use groups to assign permissions. Set an IAM password policy. Follow the least privilege principle.","title":"Best Practise"},{"location":"iam/#multi-factor-authentication-mfa","text":"Should be enabled for all users.","title":"Multi-factor Authentication (MFA)"},{"location":"iam/#supported-mfa-devices","text":"Virtual MFA (Google Authenticator, Authy) U2F Security Key (Yubikey) Hardware Key Fob (Gemalto) Hardware Key Fob for GovCloud (SurePassID)","title":"Supported MFA Devices"},{"location":"iam/#aws-cloudshell","text":"Cloud based CLI that can be used in lieu of the AWS CLI on your local machine. Uses the same credentials as the logged in user.","title":"AWS CloudShell"},{"location":"iam/#iam-roles","text":"Common roles are EC2 instance roles, Lambda function roles, and CloudFormation roles.","title":"IAM Roles"},{"location":"iam/#iam-security-tools","text":"IAM Credentials Report (account level) - List all users in an account and their various credentials.. IAM Access Adviser (user level) - Service permissions granted to a user and when the services were last accessed.","title":"IAM Security Tools"},{"location":"iam/#shared-responsibility-model","text":"There's a shared responsibility model for identity management on AWS - AWS is responsible for - Infrastructure (global network security). Configuration & vulnerability analysis. Compliance validation. Customers are responsible for - Users, Groups, Roles, Policies management & monitoring. Enabling MFA on all accounts. Rotating keys. Using IAM tools to apply appropriate permissions. Analyze access patterns and review permissions.","title":"Shared Responsibility Model"},{"location":"resources/","text":"Resources \u00b6 Documentation \u00b6 mike Python utility to support versioned GitHub Pages sites. https://github.com/jimporter/mike mkdocs Python utility used to auto-generate & publish GitHub Pages sites from Markdown. https://www.mkdocs.org Linting \u00b6 commitlint NodeJS utility to lint commit messages and validate compliance with conventional commit standards. https://commitlint.js.org/ eslint Javascript/JSON linter. https://eslint.org Miscellaneous \u00b6 husky Automatically install git hooks on git clone, and lint code, commit messages, or run tests during each push/commit. https://typicode.github.io/husky Standards \u00b6 Conventional Commits Standards Specification for creating meaningful, human & machine readable commit messages. https://www.conventionalcommits.org","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#documentation","text":"mike Python utility to support versioned GitHub Pages sites. https://github.com/jimporter/mike mkdocs Python utility used to auto-generate & publish GitHub Pages sites from Markdown. https://www.mkdocs.org","title":"Documentation"},{"location":"resources/#linting","text":"commitlint NodeJS utility to lint commit messages and validate compliance with conventional commit standards. https://commitlint.js.org/ eslint Javascript/JSON linter. https://eslint.org","title":"Linting"},{"location":"resources/#miscellaneous","text":"husky Automatically install git hooks on git clone, and lint code, commit messages, or run tests during each push/commit. https://typicode.github.io/husky","title":"Miscellaneous"},{"location":"resources/#standards","text":"Conventional Commits Standards Specification for creating meaningful, human & machine readable commit messages. https://www.conventionalcommits.org","title":"Standards"}]}